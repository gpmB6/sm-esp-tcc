# Botao1: 3V e GPIO4(D2)
# Botao2: 3V e GPIO0(D3)
# Led: GND3 e GPIO12(D6)
# Potenciometro: GND1, GPIO5(D1) e A0 (compartilhada com o sensor)
# Sensor (LDR): GND1, GPIO16(D0) e A0 (compartilhada com o potenciometro)
# Motor (servo): GND1, VCC3.3_2 e GPIO14(D5)

from machine import Pin, ADC, PWM
from time import sleep

# Definicao de variaveis
botao1 = Pin(4, Pin.IN)
botao2 = Pin(0, Pin.IN)
led = Pin(12, Pin.OUT)
sens = Pin(16, Pin.OUT)
pot = Pin(5, Pin.OUT)
analog = ADC(0)
servo = PWM(Pin(14), freq=50)

# Inteiros
trainingNum = 0
buttonCounter = 0
sensorFinal = 0
sensorVal = 0
actuatorVal = 0
potenFinal = 0
writeVal = 0

# Booleanos
buttonPressed = False
buttonHeld = False
trainingDone = False
#adequacao ao lastButtonVal (temp para verificar mudanca de estado no botao - estava pressionado e soltou
lastButtonVal1 = False

while True:
  #pega o estado atual do botao 1 e 2
  buttonVal1 = estado_logico1 = botao1.value()
  buttonVal2 = estado_logico2 = botao2.value()
  
  #verifica o que deve ser feito
  #valida se algum botao foi pressionado
  
  #manteve pressionado o botao 1
  buttonHeld = (not buttonVal1 and lastButtonVal1 and buttonCounter1 > 10)
  
  #soh apertou o 2, sem manter
  buttonPressed = (not buttonVal1 and lastButtonVal1 and not buttonHeld)
  print('estado do botao 1: ', buttonPressed)
  
  if buttonHeld:
    trainingDone = True
    print('Botao pressionado')
    buttonCounter1 = 0
  
  #else:
  #  print('agora vai')
    
  if buttonVal1:
    sleep(2)
    buttonCounter1 += 1
    
  else: 
    sleep(2)
    buttonCounter1 = 0
  
  #se o botao 2 for ativado
  if trainingDone:
    sleep(2)
    led.off()
    print('trainingDone verdadeiro, manda os valores para a planilha')
  
  elif buttonVal1:
    sleep(2)
    print('caiu no primeiro elif do botao 1')
    potenFinal = actuatorVal
    sensorFinal = sensorVal
    print('Valor do potenciometro armazenado: ', potenFinal)
    print('Valor do sensor armazenado: ', sensorFinal)
    print('Botao 1 pressionado, treinamento concluido')
    trainingDone = True
  
  # AINDA EM TREINAMENTO  
  elif buttonPressed:
    sleep(2)
    print('caiu no elif botao1, led deve acender e o treinamento ser iniciado')
    led.on()
    pot.off()
    sens.on()
    analog_value = analog.read()
    sensorVal = analog_value
    sleep(1)
    sens.off()
    pot.on()
    analog_value = analog.read()
    actuatorVal = analog_value
    angle=180/948*actuatorVal
    writeVal=94/180*angle + 24
    sensorFinal = sensorVal
    potencFinal = actuatorVal
    servo.duty(int(writeVal))
    sleep(.5)
  
  else:
    sleep(2)
    servo.duty(int(writeVal))
    print('estado do botao 1: ', buttonPressed)
    print('caiu no else')

sleep(5)
lastButtonVal1 = buttonVal1
